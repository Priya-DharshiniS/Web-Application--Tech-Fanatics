<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Tech Fanatics</title>
        <link rel="icon" type="image/x-icon" href="favicon.ico">
        <link rel="stylesheet" href="/css/qns.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/>
        <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/typed.js/2.0.11/typed.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/waypoints/4.0.1/jquery.waypoints.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css"/>
    </head>
    <body>
        <nav class="navbar">
            <div class="max-width">
                <div class="log">
                </div>
                <div class="logo"><a href="#">Tech<span>Fanatics</span></a></div>
                <div class="button">
                    <a href="/profile">Back to Profile</a>
                    <a href="/kanban">Back</a>
                </div>
            </div>
        </nav>
        <div class="quiz-container"><br>
            <h1>JS FUNCTIONS</h1><br>
            <h4>Note:Once an answer has been selected, it will become unavailable or disabled for further selection or interaction.Please be cautious!</h4>
            <br>
            <form id="quiz-form" action="/kanban">
                <div class="question">
                    <p>1.What is the purpose of functions in JavaScript?</p>
                    <div class="answers">
                        <label>
                            <input type="radio" name="q1" value="a" onclick="disableOtherOptions(this, 'q1');">
                            <span class="custom-radio"></span> To define variables 
                        </label>
                        <label>
                            <input type="radio" name="q1" value="b" onclick="disableOtherOptions(this, 'q1');">
                            <span class="custom-radio"></span> To perform mathematical calculations 
                        </label>
                        <label>
                            <input type="radio" name="q1" value="c" onclick="disableOtherOptions(this, 'q1');">
                            <span class="custom-radio"></span> To group and reuse code 
                        </label>
                        <label>
                            <input type="radio" name="q1" value="d" onclick="disableOtherOptions(this, 'q1');">
                            <span class="custom-radio"></span> To declare constants
                        </label>
                    </div>
                </div>
                <div class="question">
                    <p>2.Which keyword is used to declare a function in JavaScript?</p>
                    <div class="answers">
                        <label>
                            <input type="radio" name="q2" value="a" onclick="disableOtherOptions(this, 'q2');">
                            <span class="custom-radio"></span>  func. 
                        </label>
                        <label>
                            <input type="radio" name="q2" value="b" onclick="disableOtherOptions(this, 'q2');">
                            <span class="custom-radio"></span>  function. 
                        </label>
                        <label>
                            <input type="radio" name="q2" value="c" onclick="disableOtherOptions(this, 'q2');">
                            <span class="custom-radio"></span>  def. 
                        </label>
                        <label>
                            <input type="radio" name="q2" value="d" onclick="disableOtherOptions(this, 'q2');">
                            <span class="custom-radio"></span> declare.
                        </label>
                    </div>
                </div>
                    <div class="question">
                        <p>3.Consider the following code snippet:function greet(name) {
                            return "Hello, " + name + "!";
                        }How would you call the 'greet' function with the argument "John"?
                    </p>
                        <div class="answers">
                            <label>
                                <input type="radio" name="q3" value="a" onclick="disableOtherOptions(this, 'q3');">
                                <span class="custom-radio"></span> greet.John();. 
                            </label>
                            <label>
                                <input type="radio" name="q3" value="b" onclick="disableOtherOptions(this, 'q3');">
                                <span class="custom-radio"></span> greet("John");. 
                            </label>
                            <label>
                                <input type="radio" name="q3" value="c" onclick="disableOtherOptions(this, 'q3');">
                                <span class="custom-radio"></span> call greet("John")
                            </label>
                            <label>
                                <input type="radio" name="q3" value="d" onclick="disableOtherOptions(this, 'q3');">
                                <span class="custom-radio"></span> execute greet("John").
                            </label>
                        </div>
                    </div>
                    <div class="question">
                        <p>4. What is the purpose of the return statement in a JavaScript function?
                        </p>
                        <div class="answers">
                            <label>
                                <input type="radio" name="q4" value="a"onclick="disableOtherOptions(this, 'q4');">
                                <span class="custom-radio"></span>  It defines the function parameters.  
                            </label>
                            <label>
                                <input type="radio" name="q4" value="b" onclick="disableOtherOptions(this, 'q4');">
                                <span class="custom-radio"></span> It ends the execution of a function and specifies a value to be returned. 
                            </label>
                            <label>
                                <input type="radio" name="q4" value="c" onclick="disableOtherOptions(this, 'q4');">
                                <span class="custom-radio"></span> It is used for conditional statements
                            </label>
                            <label>
                                <input type="radio" name="q4" value="d" onclick="disableOtherOptions(this, 'q4');">
                                <span class="custom-radio"></span>  It is used for error handling.
                            </label>
                        </div>
                    </div>
                    <div class="question">
                        <p>5.Consider the following code snippet:let multiply = function(x, y) {
                            return x * y;
                        };How would you invoke the multiply function with arguments 5 and 3?
                         </p>
                        <div class="answers">
                            <label>
                                <input type="radio" name="q5" value="a" onclick="disableOtherOptions(this, 'q5');">
                                <span class="custom-radio"></span>  multiply.5.3;
                            </label>
                            <label>
                                <input type="radio" name="q5" value="b" onclick="disableOtherOptions(this, 'q5');">
                                <span class="custom-radio"></span> multiply(5, 3); 
                            </label>
                            <label>
                                <input type="radio" name="q5" value="c" onclick="disableOtherOptions(this, 'q5');">
                                <span class="custom-radio"></span> call multiply(5, 3);
                            </label>
                            <label>
                                <input type="radio" name="q5" value="d" onclick="disableOtherOptions(this, 'q5');">
                                <span class="custom-radio"></span>  execute multiply(5, 3); 
                            </label>
                        </div>
                    </div>
                    <div class="question">
                        <p>6.What is a function expression in JavaScript? </p>
                        <div class="answers">
                            <label>
                                <input type="radio" name="q6" value="a" onclick="disableOtherOptions(this, 'q6');">
                                <span class="custom-radio"></span>  A function declaration using the function keyword
                            </label>
                            <label>
                                <input type="radio" name="q6" value="b" onclick="disableOtherOptions(this, 'q6');">
                                <span class="custom-radio"></span>  A way to define a function as a variable assignment.
                            </label>
                            <label>
                                <input type="radio" name="q6" value="c" onclick="disableOtherOptions(this, 'q6');">
                                <span class="custom-radio"></span> A function that outputs an expression
                            </label>
                            <label>
                                <input type="radio" name="q6" value="d" onclick="disableOtherOptions(this, 'q6');">
                                <span class="custom-radio"></span>  A function used for mathematical expressions only
                            </label>
                        </div>
                    </div>
                    <div class="question">
                        <p>7.Which of the following is the correct way to declare a function with parameters in JavaScript?</p>
                        <div class="answers">
                            <label>
                                <input type="radio" name="q7" value="a" onclick="disableOtherOptions(this, 'q7');">
                                <span class="custom-radio"></span>  function add(x, y) { }
                            </label>
                            <label>
                                <input type="radio" name="q7" value="b" onclick="disableOtherOptions(this, 'q7');">
                                <span class="custom-radio"></span>  function add {x, y} { } 
                            </label>
                            <label>
                                <input type="radio" name="q7" value="c" onclick="disableOtherOptions(this, 'q7');">
                                <span class="custom-radio"></span>  function add(x = 0, y = 0) { }
                            </label>
                            <label>
                                <input type="radio" name="q7" value="d" onclick="disableOtherOptions(this, 'q7');">
                                <span class="custom-radio"></span>  function add() { }
                            </label>
                        </div>
                    </div>
                    <div class="question">
                        <p>8.What is the purpose of the "arguments" object in a JavaScript function?
                        <div class="answers">
                            <label>
                                <input type="radio" name="q8" value="a" onclick="disableOtherOptions(this, 'q8');">
                                <span class="custom-radio"></span>  It holds the return value of a function..   
                            </label>
                            <label>
                                <input type="radio" name="q8" value="b" onclick="disableOtherOptions(this, 'q8');">
                                <span class="custom-radio"></span>  It provides access to the parameters passed into a function..  
                            </label>
                            <label>
                                <input type="radio" name="q8" value="c" onclick="disableOtherOptions(this, 'q8');">
                                <span class="custom-radio"></span>  It defines local variables for a function.
                            </label>
                            <label>
                                <input type="radio" name="q8" value="d" onclick="disableOtherOptions(this, 'q8');">
                                <span class="custom-radio"></span>  It specifies the data type of a function.
                            </label>
                        </div>
                    </div>
                    <div class="question">
                        <p>9.Consider the following code snippet:let x = function() {
                            return "Hello, World!";
                        };What is the value of x()?
                        
                        </p>  
                        <div class="answers">
                            <label>
                                <input type="radio" name="q9" value="a" onclick="disableOtherOptions(this, 'q9');">
                                <span class="custom-radio"></span> "Hello, World!".
                            </label>
                            <label>
                                <input type="radio" name="q9" value="b" onclick="disableOtherOptions(this, 'q9');">
                                <span class="custom-radio"></span>  undefined. 
                            </label>
                            <label>
                                <input type="radio" name="q9" value="c" onclick="disableOtherOptions(this, 'q9');">
                                <span class="custom-radio"></span>  Error.
                            </label>
                            <label>
                                <input type="radio" name="q9" value="d" onclick="disableOtherOptions(this, 'q9');">
                                <span class="custom-radio"></span>   null.
                        </div>
                    </div>
                    <div class="question">
                        <p>10.What is the concept of "hoisting" in JavaScript functions?
                        </p>
                        <div class="answers">
                            <label>
                                <input type="radio" name="q10" value="a" onclick="disableOtherOptions(this, 'q10');">
                                <span class="custom-radio"></span>   It refers to the lifting of variable declarations to the top of the code..
                            </label>
                            <label>
                                <input type="radio" name="q10" value="b" onclick="disableOtherOptions(this, 'q10');">
                                <span class="custom-radio"></span>  It is a type of function expression..
                            </label>
                            <label>
                                <input type="radio" name="q10" value="c" onclick="disableOtherOptions(this, 'q10');">
                                <span class="custom-radio"></span>  It is a way to call functions from any part of the code.
                            </label>
                            <label>
                                <input type="radio" name="q10" value="d" onclick="disableOtherOptions(this, 'q10');">
                                <span class="custom-radio"></span>  It is used for error handling in functions.
                            </label>
                        </div>
                    </div>
                </div>
                <button type="submit" class="submit-btn">Submit</button>
                <div class="button" style="  display: inline-block;
                margin-bottom: 20px auto;
                padding:10px 20px;
                color:white;
                background:  rgb(30, 18, 40);
                border-radius: 5px;
                cursor:pointer;
                font-size: 14px;
                padding: 8px 24px;
                margin-right: 10px;
                font-weight: 400;
                border-radius: 14px;
                border: 2px solid rgb(160, 56, 244);
                transition: all 0.3s ease;">
                    <a href="#" onclick="moveToDone('card6')" style="color: white;">Close</a>
                </div>
            </form>
            <div class="result" id="result"></div><br>
        </div>
        <br>
        <script>
            function disableOtherOptions(selectedOption, questionName) {
                const options = document.getElementsByName(questionName);
                for (let i = 0; i < options.length; i++) {
                    options[i].disabled = true;
                }
                selectedOption.disabled = false;
            }
    
            const quizform = document.getElementById('quiz-form');
            const resultdiv = document.getElementById('result');
            const correctAnswers = ['b', 'c', 'c', 'b', 'b', 'd', 'd', 'd', 'b', 'a'];
    
            quizform.addEventListener('submit', async function (e) {
                e.preventDefault();
    
                let score = 0;
                const userAnswers = [];
    
                for (let i = 0; i < correctAnswers.length; i++) {
                    const option = quizform.elements['q' + (i + 1)];
    
                    // Check if any option is selected for the question
                    if (option) {
                        const selectedAnswer = Array.from(option).find(input => input.checked);
    
                        if (selectedAnswer) {
                            userAnswers.push(selectedAnswer.value);
    
                            // Disable the options after selection
                            option.forEach(input => input.disabled = true);
                        }
                    }
                }
    
                for (let i = 0; i < userAnswers.length; i++) {
                    const answer = userAnswers[i];
                    if (answer === correctAnswers[i]) {
                        score += 1;
                    }
                }
    
                // Save the quiz result to MongoDB and display the score
                await saveQuizResult(userAnswers);
    
                // Display the total score in the resultdiv
                resultdiv.innerHTML = `Your score is ${score}/${correctAnswers.length}`;
            });
            quizform.addEventListener('submit',function(e) {
            e.preventDefault();

            let score = 0;
            const userAnswers = [
                // Your existing logic to collect user answers
            ];

            for (let i = 0; i < userAnswers.length; i++) {
                const answer = userAnswers[i];
                const option = quizform.elements['q' + (i + 1)];
                option.disabled = true;

                if (answer === correctAnswers[i]) {
                    score += 1;
                }
            }

            // Save the card state in local storage
            localStorage.setItem('card1', 'done');

            resultdiv.innerHTML = `Your score is ${score}/${correctAnswers.length}`;
        });
    
            async function saveQuizResult(userAnswers) {
                try {
                    const response = await fetch('/saveQuizResult', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ username: '<%= username %>', userAnswers }),
                    });
    
                    if (response.ok) {
                        console.log('Quiz result saved successfully.');
                    } else {
                        console.error('Failed to save quiz result.');
                    }
                } catch (error) {
                    console.error('Error saving quiz result:', error);
                }
            }
    
            function moveToDone(cardId) {
// Retrieve the card state from session storage
const cardState = sessionStorage.getItem(cardId);

// Check if the card state is 'done'
if (cardState === 'done') {
    alert('Card already moved to done.');
} else {
    // Save the card state in session storage
    sessionStorage.setItem(cardId, 'done');

    // Redirect to the kanban.html page after updating the card state
    window.location.href = '/kanban';
}
}

window.onload = function () {
// On page load, check and move cards that are marked as done
for (var i = 0; i < cardSequence.length; i++) {
    var cardId = cardSequence[i];
    var cardState = sessionStorage.getItem(cardId);

    if (cardState === 'done') {
        var card = document.getElementById(cardId);
        document.getElementById('done-column').appendChild(card);
        cardStates[i] = 'done';
    }
}

// Additional logic as needed
};
        </script>
    </body>
</html>