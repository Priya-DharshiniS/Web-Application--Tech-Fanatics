<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tech Fanatics</title>
    <link rel="icon" type="image/x-icon" href="favicon.ico">
    <link rel="stylesheet" href="/css/kanban.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/typed.js/2.0.11/typed.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/waypoints/4.0.1/jquery.waypoints.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js"></script>
    <script src="https://rawgit.com/eKoopmans/html2pdf/master/dist/html2pdf.bundle.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css" />
</head>

<body>
    <nav class="navbar">
        <div class="max-width">
            <div class="log">
            </div>
            <h1 style="color: white;margin-left: -140px;"><%= username %></h1>
            <div class="logo"><a href="#">Tech<span>Fanatics</span></a></div>
            <div class="button">
                <a href="/profile">Back to Profile</a>
                <button onclick="downloadCertificate()">Download Certificate</button>
            </div>
        </div>
    </nav>
    <div class="kanban-board">
        <div class="column" id="todo" ondrop="drop(event, 'progress')" ondragover="allowDrop(event)">
            <h2 id="todo"> TO DO</h2>
            <div class="column-content todo" id="todo-column" ondrop="drop(event, 'progress')"
                ondragover="allowDrop(event)">
                <div class="card" id="card1" draggable="true" onclick="moveToInProgress('card1')">
                    <div class="icon">
                        <img src="../images/js1.png" alt="js1" width="45" height="45">
                    </div>
                    <p class="title">Introduction To JS</p>
                    <p class="text">"Versatile, dynamic, client-side scripting."</p>
                </div>

                <div class="card" id="card2" draggable="true" onclick="moveToInProgress('card2')">
                    <div class="icon">
                      <img src="../images/js2.png" alt="js2" width="45" height="45">
                    </div>
                    <p class="title">JS Syntax and Statements</p>
                    <p class="text">“Variables, functions, loops, conditions."</p>
                  </div>
                <div class="card" id="card3" draggable="true" onclick="moveToInProgress('card3')">
                  <div class="icon">
                    <img src="../images/js1.png" alt="js3" width="45" height="45">
                  </div>
                  <p class="title">JS Comments and variables</p>
                  <p class="text">“Comments explain, variables store data."</p>
                </div>
                <div class="card" id="card4" draggable="true" onclick="moveToInProgress('card4')">
                    <div class="icon">
                      <img src="../images/js5.png" alt="js4" width="45" height="45">
                    </div>
                    <p class="title">JS Operators</p>
                    <p class="text">“Math, comparison, logical, assignment, bitwise."</p>
                  </div>
                  <div class="card" id="card5" draggable="true" onclick="moveToInProgress('card5')">
                    <div class="icon">
                      <img src="../images/js1.png" alt="js5" width="45" height="45">
                    </div>
                    <p class="title">JS Data types</p>
                    <p class="text">“String, number, boolean, object, undefined."</p>
                  </div>
                  <div class="card" id="card6" draggable="true" onclick="moveToInProgress('card6')">
                    <div class="icon">
                      <img src="../images/js4.png" alt="js6" width="45" height="45">
                    </div>
                    <p class="title">JS Functions</p>
                    <p class="text">"Define, call, parameters, return, scope."</p>
                  </div>
                  <div class="card" id="card7" draggable="true" onclick="moveToInProgress('card7')">
                    <div class="icon">
                      <img src="../images/js1.png" alt="js7" width="45" height="45">
                    </div>
                    <p class="title">JS Arrays</p>
                    <p class="text">"Ordered, indexed, methods, elements, iteration."</p>
                  </div>
                  <div class="card" id="card8" draggable="true" onclick="moveToInProgress('card8')">
                    <div class="icon">
                      <img src="../images/js5.png" alt="js8" width="45" height="45">
                    </div>
                    <p class="title">JS Sets</p>
                    <p class="text">"Unique, unordered, iterable, methods, elements."</p>
                  </div>
                  <div class="card" id="card9" draggable="true" onclick="moveToInProgress('card9')">
                    <div class="icon">
                      <img src="../images/js1.png" alt="js9" width="45" height="45">
                    </div>
                    <p class="title">JS Strings</p>
                    <p class="text">"Text, characters, methods, manipulation, concatenation."</p>
                  </div>
                  <div class="card" id="card10" draggable="true" onclick="moveToInProgress('card10')">
                    <div class="icon">
                      <img src="../images/js6.png" alt="js10" width="45" height="45">
                    </div>
                    <p class="title">JS Maps</p>
                    <p class="text">"Key-value pairs, iterable, methods."</p>
                  </div>

                <!-- Add other card elements as needed -->
            </div>
        </div>
        <div class="column">
            <h2 id="progress"> IN PROGRESS</h2>
            <div class="column-content in-progress" id="in-progress-column" ondrop="drop(event, 'done')"
                ondragover="allowDrop(event)">
            </div>
        </div>
        <div class="column">
            <h2 id="done"> DONE</h2>
            <div class="column-content done" id="done-column" ondrop="drop(event, 'todo')" ondragover="allowDrop(event)">
            </div>
        </div>
    </div>
    <script>
      var cardSequence = [
          'card1', 'card2', 'card3', 'card4', 'card5', 'card6', 'card7', 'card8', 'card9', 'card10'
      ];
      var cardStates = Array(cardSequence.length).fill('todo');
      var currentCardIndex = 0;

      function allowDrop(ev) {
          ev.preventDefault();
      }

      function drop(ev, columnId) {
          ev.preventDefault();
          var data = ev.dataTransfer.getData("text");
          var draggedElement = document.getElementById(data);

          if (columnId && columnId.startsWith("column-")) {
              var column = document.getElementById(columnId);

              if (columnId === 'todo') {
                  var cardState = draggedElement.dataset.state;
                  var cardIndex = cardSequence.indexOf(draggedElement.id);

                  if (cardIndex > 0 && cardStates[cardIndex - 1] !== 'done') {
                      alert("Previous card must be in the 'DONE' column before accessing this card.");
                      return;
                  }

                  if (cardIndex !== currentCardIndex) {
                      alert("Cards should be moved in sequential order.");
                      return;
                  }

                  column.appendChild(draggedElement);
                  cardStates[cardIndex] = 'todo';
                  currentCardIndex = cardIndex + 1;
              }

              if (columnId === 'progress') {
                  var cardState = draggedElement.dataset.state;

                  if (cardState === 'progress') {
                      var cardIndex = cardSequence.indexOf(draggedElement.id);

                      if (cardIndex === 0 && !document.getElementById('done-column').contains(document.getElementById('card1'))) {
                          alert("Card1 must be in the 'DONE' column before accessing Card2.");
                          return;
                      }

                      if (cardStates[cardIndex] === 'progress') {
                          sessionStorage.setItem('cardState', cardIndex);
                          window.location.href = '/qns' + (cardIndex + 1);
                      } else {
                          cardStates[cardIndex] = 'progress';
                      }
                  }
              }
          }
      }

//       function moveToInProgress(cardId) {
//     var card = document.getElementById(cardId);
//     var cardIndex = cardSequence.indexOf(cardId);

//     if (cardStates[cardIndex] === 'todo') {
//         document.getElementById('in-progress-column').appendChild(card);
//         cardStates[cardIndex] = 'progress';
//     } else if (cardStates[cardIndex] === 'progress') {
//         // Move the card to the 'done' column
//         document.getElementById('done-column').appendChild(card);
//         cardStates[cardIndex] = 'done';
//     }
//     // Remove the redirection logic
//     // sessionStorage.setItem('cardState', cardIndex);
//     // window.location.href = 'qns' + (cardIndex + 1) + '.html';
// }



function moveToInProgress(cardId) {
    var card = document.getElementById(cardId);
    var cardIndex = cardSequence.indexOf(cardId);

    // Check if the previous card is in the 'DONE' column
    if (cardIndex > 0 && cardStates[cardIndex - 1] !== 'done') {
        alert("Previous card must be in the 'DONE' column before accessing this card.");
        return;
    }

    // Move the card to the 'progress' column
    if (cardStates[cardIndex] === 'todo') {
        document.getElementById('in-progress-column').appendChild(card);
        cardStates[cardIndex] = 'progress';
        
        // Update card state in local storage
        localStorage.setItem(cardId, 'progress');
        window.location.href = '/video' + (cardIndex + 1);
    } else if (cardStates[cardIndex] === 'progress') {
        // Move the card to the 'done' column
        document.getElementById('done-column').appendChild(card);
        cardStates[cardIndex] = 'done';
       
        // Update card state in local storage
        localStorage.setItem(cardId, 'done');
    }
}

function areAllCardsDone() {
    for (var i = 0; i < cardStates.length; i++) {
        if (cardStates[i] !== 'done') {
            return false;
        }
    }
    return true;
}


function downloadCertificate() {
        if (areAllCardsDone()) {
            
            var marks = prompt("Enter your marks:");

            var certificateContent = `
    <div style="width: 210mm; height: 207mm; padding: 10px; text-align: center; border: 10px solid rgb(160, 56, 244); top: -40px;">
        <div style="width: 170mm; height: 177mm; padding: 10px; text-align: center; border: 7px solid #787878; margin: 0 auto;">
            <span style="font-size: 14mm; font-weight: bold; font-style: italic; color: rgb(160, 56, 244);">Tech Fanatics</span>
            <br><br><br>
            <span style="font-size: 10mm; font-weight: bold;">Certificate of Completion</span>
            <br><br><br>
            <span style="font-size: 8mm;"><i>This is to certify that</i></span>
            <br><br><br><br>
            <span style="font-size: 8mm; font-style: italic; color: rgb(160, 56, 244);"><b><%= username %></b></span><br/><br/><br><br>
            <span style="font-size: 8mm;"><i>has completed the course</i></span> <br/><br/><br>
            <span style="font-size: 10mm; color: rgb(160, 56, 244);">Javascript</span> <br/><br/>
            <span style="font-size: 6mm;">with a score of <b>${marks}%</b></span> <br/><br/>
            <span style="font-size: 6mm;"><i>dated</i></span><br><br>
            <h2 style="font-size: 8mm;">${new Date().toLocaleDateString()}</h2>
        </div>
    </div>
`;




            var certificateHTML = document.createElement('html');
            certificateHTML.innerHTML = certificateContent;

            html2pdf(certificateHTML, {
                margin: 10,
                filename: 'Certificate_of_Completion.pdf',
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
            });
        } else {
            alert("All cards must be in the 'DONE' column to download the certificate.");
        }
    }


window.onload = function () {
    // On page load, check and move cards that are marked as done
    for (var i = 0; i < cardSequence.length; i++) {
        var cardId = cardSequence[i];
        var cardState = sessionStorage.getItem(cardId);

        if (cardState === 'done') {
            var card = document.getElementById(cardId);
            document.getElementById('done-column').appendChild(card);
            cardStates[i] = 'done';
        }
    }

    // Additional logic as needed
};

  </script>
</body>
</html>


